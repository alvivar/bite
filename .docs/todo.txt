
    A way to handle lists, maybe user.likes.1 or something
    Push # value should insert into a list, transform normal values
    Pop # should return and delete a value
    SET without key, creates an empty key

    Hand Value casting, it needs to be int, float eventually.

    Trim '.' at the end to avoid weird formats
    Append '.' to the key to make sure the json tree can be constructed

    Use time and IP on the server log
    Connection handles needs to be a module?
    Use a decent log system instead of println?

    I'm using the Cargo.toml dependencies correctly?

    Thread waiting for q! in the input to quit.
    Improve serialization so it can be written in blocks like a good BTreeMap on file?

    Auth by environment
    DB file name by environment
    IP and port by environment

    Use Error as results instead of unwrap


    2021.02.06
    x Probably, values needs to be sanitized, codified when converting to json?
    x Get should read values using json instructions
    x Set should transform json instructions into a value
    x Parse message for nested jsons into instructions
    x Parsing JSON Parent key with data panics!
    x SET user.name Name -> { "user": { name: "Name" } }
    x SET user.name.len 4 -> { "user": { "name": { "len": 4 } } }
    x GET user.name -> Name <- { "user": { name: "Name" } }
    x GET user.name.len -> 4 <- { "user": { "name": { "len": 4 } } }
    x Macros to deal with infinite json value propagation?

    2021.02.02
    x Handle dead threads

    2021.01.30
    x New threads should be created, if all of them are busy

    2021.01.30
    x Exit correctly by joining handles
    x Saving into the file should have a throtle
    x v3 Implemented [!]
    x How to create a WorkerPool
    x How to create modules or something to divide logic in files

    2021.01.25
    x Save to file!
    x WorkerPool prototype

    2021.01.24
    x Propagate ip address
    x Handle client disconnect because everything explodes
    x Threads should be able to handle a pool of connections
    x NOP propagates the wrong instruction as key

    2021.01.23
    x Thread pool handles connections and parsing
    x Main thread process IO
    x Multithreaded

    2021.01.22
    x Happiness! PROD ready I guess!
    x Needs to send back the message to the client [!]

    2021.01.20
    x Server writes over the BTreeMap withing a thread using Arc::new(RwLock::new(key_values)) as pointer, need more info
    x Client clean up, but something is missing
    x GET fails if empty, it should probably set a default

    2021.01.18
    x GEt to BTreeMap
    x SET to BTreeMap
    Prototype, single thread, like a chat, simple parsing
